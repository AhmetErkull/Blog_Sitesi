// <auto-generated />
using System;
using Blog_Sitesi.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Blog_Sitesi.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Teknolojik şeyler",
                            Name = "Teknoloji"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Sanat ve Kültür şeyler",
                            Name = "Sanat ve Kültür"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Kişisel Gelişim şeyler",
                            Name = "Kişisel Gelişim"
                        },
                        new
                        {
                            CategoryId = 4,
                            Description = "Eğitim ile ilgili konular",
                            Name = "Eğitim"
                        },
                        new
                        {
                            CategoryId = 5,
                            Description = "Sağlık teknolojileri ve sağlık hizmetleri",
                            Name = "Sağlık"
                        },
                        new
                        {
                            CategoryId = 6,
                            Description = "Seyahat ve turizm",
                            Name = "Seyahat"
                        },
                        new
                        {
                            CategoryId = 7,
                            Description = "Girişimcilik ve iş dünyası",
                            Name = "Girişimcilik"
                        },
                        new
                        {
                            CategoryId = 8,
                            Description = "Sosyal medya platformları ve etkileri",
                            Name = "Sosyal Medya"
                        },
                        new
                        {
                            CategoryId = 9,
                            Description = "Çevresel sürdürülebilirlik ve yeşil teknolojiler",
                            Name = "Çevre"
                        },
                        new
                        {
                            CategoryId = 10,
                            Description = "Finansal piyasalar ve yenilikçi finansal teknolojiler",
                            Name = "Finans"
                        },
                        new
                        {
                            CategoryId = 11,
                            Description = "Online ticaret platformları ve e-ticaret trendleri",
                            Name = "E-ticaret"
                        },
                        new
                        {
                            CategoryId = 12,
                            Description = "Mobil uygulama geliştirme ve mobil teknolojiler",
                            Name = "Mobil Uygulamalar"
                        },
                        new
                        {
                            CategoryId = 13,
                            Description = "Sanayi ve endüstriyel süreçlerdeki yenilikler",
                            Name = "Endüstri"
                        },
                        new
                        {
                            CategoryId = 14,
                            Description = "Veri analizi ve büyük veri teknolojileri",
                            Name = "Veri Bilimi"
                        });
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            Content = "çok güzeldi teşekkürler",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(1688),
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 2,
                            Content = "dostum naber",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(1702),
                            PostId = 1,
                            UserId = 2
                        },
                        new
                        {
                            CommentId = 3,
                            Content = "vay canına",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(1704),
                            PostId = 1,
                            UserId = 3
                        },
                        new
                        {
                            CommentId = 4,
                            Content = "çok bilgilendiriciydi",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(1705),
                            PostId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Image", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("PostId");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ImageId = 1,
                            PostId = 1,
                            Url = "https://letsenhance.io/static/8f5e523ee6b2479e26ecc91b9c25261e/1015f/MainAfter.jpg"
                        },
                        new
                        {
                            ImageId = 2,
                            PostId = 1,
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTuWXzkIYkMaVY24lJLPWFRS3WKI3kB3Ls0bg&s"
                        },
                        new
                        {
                            ImageId = 3,
                            PostId = 2,
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcREoRGyXmHy_6aIgXYqWHdOT3KjfmnuSyxypw&s"
                        },
                        new
                        {
                            ImageId = 4,
                            PostId = 3,
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTlJ2u482NBtw501OOICaZxGrIcxNtG5SuqWQ&s"
                        },
                        new
                        {
                            ImageId = 5,
                            PostId = 4,
                            Url = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSxlT_-PpQJbt3DsWOZDQYohRy4YF8ck1n8PA&s"
                        },
                        new
                        {
                            ImageId = 6,
                            PostId = 5,
                            Url = "https://plus.unsplash.com/premium_photo-1676637000058-96549206fe71?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MXx8aW1hZ2V8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            ImageId = 7,
                            PostId = 6,
                            Url = "https://images.unsplash.com/photo-1575936123452-b67c3203c357?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8aW1hZ2V8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            ImageId = 8,
                            PostId = 7,
                            Url = "https://plus.unsplash.com/premium_photo-1680553492268-516537c44d91?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NXx8aW1hZ2V8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            ImageId = 9,
                            PostId = 8,
                            Url = "https://images.unsplash.com/photo-1488372759477-a7f4aa078cb6?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NHx8aW1hZ2V8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            ImageId = 10,
                            PostId = 9,
                            Url = "https://images.unsplash.com/photo-1574169208507-84376144848b?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Nnx8aW1hZ2V8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            ImageId = 11,
                            PostId = 10,
                            Url = "https://images.unsplash.com/photo-1566438480900-0609be27a4be?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8M3x8aW1hZ2V8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            ImageId = 12,
                            PostId = 11,
                            Url = "https://plus.unsplash.com/premium_photo-1664474619075-644dd191935f?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OXx8aW1hZ2V8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            ImageId = 13,
                            PostId = 12,
                            Url = "https://images.unsplash.com/photo-1595147389795-37094173bfd8?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTF8fGltYWdlfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            ImageId = 14,
                            PostId = 13,
                            Url = "https://images.unsplash.com/photo-1613323593608-abc90fec84ff?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8OHx8aW1hZ2V8ZW58MHx8MHx8fDA%3D"
                        },
                        new
                        {
                            ImageId = 15,
                            PostId = 14,
                            Url = "https://images.unsplash.com/photo-1574169207511-e21a21c8075a?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTJ8fGltYWdlfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            ImageId = 16,
                            PostId = 15,
                            Url = "https://plus.unsplash.com/premium_photo-1687382111414-7b87afa5da34?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTN8fGltYWdlfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            ImageId = 17,
                            PostId = 16,
                            Url = "https://images.unsplash.com/photo-1551021794-03be4ddaf67d?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTB8fGltYWdlfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            ImageId = 18,
                            PostId = 17,
                            Url = "https://images.unsplash.com/photo-1628784230353-5bee16e2f005?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTZ8fGltYWdlfGVufDB8fDB8fHww"
                        },
                        new
                        {
                            ImageId = 19,
                            PostId = 18,
                            Url = "https://images.unsplash.com/photo-1598214886806-c87b84b7078b?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8MTV8fGltYWdlfGVufDB8fDB8fHww"
                        });
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("PostId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            CategoryId = 1,
                            Content = "bir şeyler bir şeyler",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8390),
                            Title = "başlık1",
                            UserId = 3,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 2,
                            CategoryId = 2,
                            Content = "burada şunu anlatıyoruz",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8466),
                            Title = "başlık2",
                            UserId = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 3,
                            CategoryId = 1,
                            Content = "bu da böyle bir post",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8468),
                            Title = "başlık3",
                            UserId = 1,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 4,
                            CategoryId = 3,
                            Content = "Yeni teknoloji trendleri üzerine düşüncelerimiz.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8470),
                            Title = "Teknoloji Trendleri",
                            UserId = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 5,
                            CategoryId = 4,
                            Content = "Geleceğin eğitim sistemleri nasıl olacak?",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8471),
                            Title = "Geleceğin Eğitimi",
                            UserId = 3,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 6,
                            CategoryId = 3,
                            Content = "Yazılım geliştirme süreçlerindeki en büyük zorluklarımız.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8474),
                            Title = "Yazılım Geliştirme Zorlukları",
                            UserId = 1,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 7,
                            CategoryId = 5,
                            Content = "Sağlık sektöründe yapay zeka kullanımı üzerine düşünceler.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8475),
                            Title = "Yapay Zeka ve Sağlık",
                            UserId = 3,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 8,
                            CategoryId = 6,
                            Content = "Geleceğin seyahat trendleri ve tahminlerimiz.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8477),
                            Title = "Geleceğin Seyahatleri",
                            UserId = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 9,
                            CategoryId = 4,
                            Content = "Sanal gerçeklik teknolojilerinin eğitimdeki potansiyeli.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8478),
                            Title = "Sanal Gerçeklik ve Eğitim",
                            UserId = 1,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 10,
                            CategoryId = 7,
                            Content = "Girişimcilikte en önemli başarı faktörleri nelerdir?",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8481),
                            Title = "Girişimcilik Başarı Faktörleri",
                            UserId = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 11,
                            CategoryId = 8,
                            Content = "Sosyal medyanın geleceği ve değişen dinamikler.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8482),
                            Title = "Sosyal Medyanın Geleceği",
                            UserId = 3,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 12,
                            CategoryId = 5,
                            Content = "Yapay zeka ve otomasyonun endüstriyel etkileri üzerine bir değerlendirme.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8483),
                            Title = "Yapay Zeka ve Endüstri",
                            UserId = 1,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 13,
                            CategoryId = 9,
                            Content = "Çevresel sürdürülebilirlik ve iş dünyasındaki rolü.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8485),
                            Title = "Çevresel Sürdürülebilirlik",
                            UserId = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 14,
                            CategoryId = 10,
                            Content = "Blockchain teknolojisinin finans sektöründeki yenilikçi kullanımları.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8486),
                            Title = "Blockchain ve Finans",
                            UserId = 3,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 15,
                            CategoryId = 11,
                            Content = "E-ticaretin geleceği ve değişen tüketici alışkanlıkları.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8487),
                            Title = "E-ticaretin Geleceği",
                            UserId = 1,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 16,
                            CategoryId = 12,
                            Content = "Yeni nesil mobil uygulama geliştirme trendleri üzerine düşünceler.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8488),
                            Title = "Mobil Uygulama Trendleri",
                            UserId = 2,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 17,
                            CategoryId = 5,
                            Content = "Yapay zeka ve günlük yaşam üzerindeki etkileri.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8490),
                            Title = "Yapay Zeka ve Günlük Hayat",
                            UserId = 3,
                            ViewCount = 0
                        },
                        new
                        {
                            PostId = 18,
                            CategoryId = 9,
                            Content = "Geleceğin enerji ihtiyaçları ve sürdürülebilir enerji çözümleri.",
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 774, DateTimeKind.Local).AddTicks(8492),
                            Title = "Geleceğin Enerji İhtiyaçları",
                            UserId = 1,
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.PostTag", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTag");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            TagId = 2
                        },
                        new
                        {
                            PostId = 2,
                            TagId = 2
                        },
                        new
                        {
                            PostId = 2,
                            TagId = 3
                        },
                        new
                        {
                            PostId = 2,
                            TagId = 4
                        },
                        new
                        {
                            PostId = 3,
                            TagId = 4
                        },
                        new
                        {
                            PostId = 4,
                            TagId = 5
                        },
                        new
                        {
                            PostId = 4,
                            TagId = 6
                        },
                        new
                        {
                            PostId = 5,
                            TagId = 7
                        },
                        new
                        {
                            PostId = 6,
                            TagId = 5
                        },
                        new
                        {
                            PostId = 6,
                            TagId = 8
                        },
                        new
                        {
                            PostId = 7,
                            TagId = 9
                        },
                        new
                        {
                            PostId = 8,
                            TagId = 10
                        },
                        new
                        {
                            PostId = 9,
                            TagId = 7
                        },
                        new
                        {
                            PostId = 9,
                            TagId = 11
                        },
                        new
                        {
                            PostId = 10,
                            TagId = 12
                        },
                        new
                        {
                            PostId = 11,
                            TagId = 13
                        },
                        new
                        {
                            PostId = 12,
                            TagId = 14
                        },
                        new
                        {
                            PostId = 13,
                            TagId = 15
                        },
                        new
                        {
                            PostId = 14,
                            TagId = 16
                        },
                        new
                        {
                            PostId = 15,
                            TagId = 17
                        },
                        new
                        {
                            PostId = 16,
                            TagId = 18
                        },
                        new
                        {
                            PostId = 17,
                            TagId = 19
                        },
                        new
                        {
                            PostId = 18,
                            TagId = 20
                        });
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            TagName = "Yapay Zeka"
                        },
                        new
                        {
                            TagId = 2,
                            TagName = "Veri Bilimi"
                        },
                        new
                        {
                            TagId = 3,
                            TagName = "Web Geliştirme"
                        },
                        new
                        {
                            TagId = 4,
                            TagName = "Mobil Uygulamalar"
                        },
                        new
                        {
                            TagId = 5,
                            TagName = "Teknoloji Trendleri"
                        },
                        new
                        {
                            TagId = 6,
                            TagName = "Eğitim Sistemleri"
                        },
                        new
                        {
                            TagId = 7,
                            TagName = "Yazılım Geliştirme"
                        },
                        new
                        {
                            TagId = 8,
                            TagName = "Sanal Gerçeklik"
                        },
                        new
                        {
                            TagId = 9,
                            TagName = "Sağlık Teknolojileri"
                        },
                        new
                        {
                            TagId = 10,
                            TagName = "Seyahat Trendleri"
                        },
                        new
                        {
                            TagId = 11,
                            TagName = "Girişimcilik"
                        },
                        new
                        {
                            TagId = 12,
                            TagName = "Sosyal Medya"
                        },
                        new
                        {
                            TagId = 13,
                            TagName = "Endüstri 4.0"
                        },
                        new
                        {
                            TagId = 14,
                            TagName = "Çevresel Sürdürülebilirlik"
                        },
                        new
                        {
                            TagId = 15,
                            TagName = "Blockchain"
                        },
                        new
                        {
                            TagId = 16,
                            TagName = "E-ticaret"
                        },
                        new
                        {
                            TagId = 17,
                            TagName = "Mobil Uygulama Geliştirme"
                        },
                        new
                        {
                            TagId = 18,
                            TagName = "Yapay Zeka Günlük Hayat"
                        },
                        new
                        {
                            TagId = 19,
                            TagName = "Enerji İhtiyaçları"
                        },
                        new
                        {
                            TagId = 20,
                            TagName = "Veri Analitiği"
                        });
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("PeriodEnd")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodEnd");

                    b.Property<DateTime>("PeriodStart")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("PeriodStart");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("UserId");

                    b.ToTable("Users", (string)null);

                    b.ToTable(tb => tb.IsTemporal(ttb =>
                            {
                                ttb.UseHistoryTable("UsersHistory");
                                ttb
                                    .HasPeriodStart("PeriodStart")
                                    .HasColumnName("PeriodStart");
                                ttb
                                    .HasPeriodEnd("PeriodEnd")
                                    .HasColumnName("PeriodEnd");
                            }));

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2259),
                            Email = "ahmet@gmail.com",
                            Name = "Ahmet",
                            Password = "123",
                            Role = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2273),
                            Email = "mehmet@gmail.com",
                            Name = "Mehmet",
                            Password = "456",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2275),
                            Email = "ayse@gmail.com",
                            Name = "Ayşe",
                            Password = "789",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 4,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2276),
                            Email = "fatma@gmail.com",
                            Name = "Fatma",
                            Password = "abc",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 5,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2278),
                            Email = "mustafa@gmail.com",
                            Name = "Mustafa",
                            Password = "def",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 6,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2282),
                            Email = "zeynep@gmail.com",
                            Name = "Zeynep",
                            Password = "ghi",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 7,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2283),
                            Email = "ali@gmail.com",
                            Name = "Ali",
                            Password = "jkl",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 8,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2284),
                            Email = "aysel@gmail.com",
                            Name = "Aysel",
                            Password = "mno",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 9,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2285),
                            Email = "ismail@gmail.com",
                            Name = "İsmail",
                            Password = "pqr",
                            Role = "user"
                        },
                        new
                        {
                            UserId = 10,
                            CreatedAt = new DateTime(2024, 7, 13, 20, 45, 0, 781, DateTimeKind.Local).AddTicks(2288),
                            Email = "hulya@gmail.com",
                            Name = "Hülya",
                            Password = "stu",
                            Role = "user"
                        });
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Comment", b =>
                {
                    b.HasOne("Blog_Sitesi.Models.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("PostId");

                    b.HasOne("Blog_Sitesi.Models.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("UserId");

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Image", b =>
                {
                    b.HasOne("Blog_Sitesi.Models.Entities.Post", "Post")
                        .WithMany("Images")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Post", b =>
                {
                    b.HasOne("Blog_Sitesi.Models.Entities.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog_Sitesi.Models.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.PostTag", b =>
                {
                    b.HasOne("Blog_Sitesi.Models.Entities.Post", "Post")
                        .WithMany("Tags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog_Sitesi.Models.Entities.Tag", "Tag")
                        .WithMany("Posts")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.Tag", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("Blog_Sitesi.Models.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
